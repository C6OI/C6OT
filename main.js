const Discord = require('discord.js');
const client = new Discord.Client();
const child_process = require("child_process");
const { sensitiveHeaders } = require('http2');

// —è –¥—É–º–∞—é —Å–¥–µ–ª–∞—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π rich presence –±—É–¥–µ—Ç —Å–ª–æ–∂–Ω–æ–≤–∞—Ç–æ –¥–∞?
// —è —Å–¥–µ–ª–∞–ª cmd –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

const owner = "789524259809525780" // bot owner id here
const logChannel = "863113977844596746"; // console log channel id here

const responses = [
  "–∫—É",
  "–ø—Ä–∏–≤–µ—Ç",
  "–¥–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É"
]

const responses2 = [
  "–ø–æ–∫–∞",
  "–¥–æ—Å–≤–µ–¥–∞–Ω–µ–µ",
  "—É–¥–∞—á–∏"
]

function restartBot() {
  child_process.spawn("node", ["main.js"], {detached: true});
  process.exit();
}

function log(something) {
  client.channels.resolve(logChannel).send(require("util").inspect(something));
}

client.on('ready', () => {
  log(`—è –∑–∞–≥—Ä—É–∑–∏–ª—Å—è`);

  client.user.setPresence({ activity: { name: "Minecraft –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö EEL Worlds" } })
});

client.on("message", async msg => {

  if (msg.author.bot) return; // –∏–≥–Ω–æ—Ä–∏–º –±–æ—Ç–æ–≤

  function getRandomFromArray(arr) {
    return arr[Math.floor(Math.random() * arr.length)]
  }

  let x = msg.content.toLowerCase( );
  
  switch (x) {

    case '–∫—É':
      msg.reply(getRandomFromArray(responses));

      break

    case '–ø–æ–∫–∞':
      msg.reply(getRandomFromArray(responses2));

      break

    case '–¥–æ—Å—á–∏—Ç–∞–π –¥–æ 3':
      for (let i = 1; i <= 3; i++)
        msg.reply(`${i}`);

      break

    case '—Ñ–æ–∫—É—Å':
      msg.reply('–ø–æ—Å–º–æ—Ç—Ä–∏ –≤ –º–æ–π —Å—Ç–∞—Ç—É—Å')
      await new Promise(resolve => setTimeout(resolve, 1000));
      client.user.setPresence({ activity: { name: "–±–∞–º" } })
      break

    case '—Ö–ª–µ–ø':
      msg.reply(`–∫–æ–º–∞–Ω–¥—ã:\n–∫—É\n–ø–æ–∫–∞\n–¥–æ—Å—á–∏—Ç–∞–π –¥–æ 3\n—Ñ–æ–∫—É—Å\n–ª–∞–π–∫\n—Ä–∂–∞—Ç—å\n–∞–¥–æ–≤—ã–π —Ñ–æ–∫—É—Å (–≤–Ω–∏–º–∞–Ω–∏–µ –±–µ–∑ —à—É—Ç–æ–∫ –æ–Ω–æ –≤–∞—Å –∑–∞–±–∞–Ω–∏—Ç –∑–∞ —ç—Ç–æ —è –≤–∏–Ω–æ–≤–∞—Ç –Ω–µ –±—É–¥—É —è –≤–∞—Å –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–ª)`);

      break

    case 'restart':
      if (msg.author.id !== owner) return;
      restartBot();

      break

    case '–ª–∞–π–∫':
      msg.react('üëç')

      break

    case '—Ä–∂–∞—Ç—å':
      msg.react('<:XD:710457045689827328>');
      msg.channel.send('<:XD:710457045689827328>').then(sentMessage => {
        sentMessage.react('<:XD:710457045689827328>');
      })

      break

      case "–∞–¥–æ–≤—ã–π —Ñ–æ–∫—É—Å":
  msg.channel.send("–ê–î–û–í–´–ô –§–û–ö–£–°")
  msg.member.ban().catch(()=>{msg.channel.send("–ë–õ–Ø –§–û–ö–£–° –ù–ï –£–î–ê–õ–°–Ø")})

  break

    default:
      isCommand = false; // –µ—Å–ª–∏ –Ω–∏–∫—É–¥–∞ –Ω–µ –ø–æ–ø–∞–ª–∏ —Ç–æ —ç—Ç–æ —Ç–∏–ø–∞ –Ω–µ –∫–æ–º–∞–Ω–¥–∞
      break;
  }
});
client.login('ODU5NzEyNjQ1MjUxMDcyMDAw.YNwryw.L2aWsQ1aP4DGmUuE3KhHNR8CrWc');