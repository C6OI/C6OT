const Discord = require('discord.js');
const BlueBird = require('bluebird');
const client = new Discord.Client();
const fs = require('fs-extra');
const child_process = require("child_process");
const { sensitiveHeaders } = require('http2');

client.commands = new Discord.Collection();
//–Ω–∏–∂–µ –º—ã –ø–∏–∑–¥–∏–º —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏
fs.readdir('./cmds', (err, files) => {
  const js = files.filter(f => f.split('.').pop() == 'js');//–∫–æ—Ä–æ—á–µ –±–µ—Ä–µ–º –≤ –ø–∞–ø–∫–µ —Å –∫–æ–º–º–∞–Ω–¥–∞–º–∏ —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã js
  js.forEach((f, i) => {
    let cmd = require(`./cmds/${f}`); 
    client.commands.set(cmd.help.name, cmd);
    //—Å—É–∫–∞ –Ω–∞ —Å–æ–ª–Ω—Ü–µ –Ω–∏—Ö—É—è –Ω–µ –≤–∏–¥–Ω–æ –º–Ω–µ –±—ã —Å–µ—Å—Ç—å –≤ —Ç–µ–Ω—å–∫–µ
    // —Ä–∞–∑–≤–µ—Ä–Ω–∏—Å—å –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤
    //–ª–æ–ª —Ç–∞–∫ –Ω–µ —É–¥–æ–±–Ω–æ –Ω–æ —Å–æ–ª–Ω—Ü–∞ –º–µ–Ω—å—à–µ —Å—Ç–∞–ª–æ
    // —è —É–º–Ω–∏–π
  });
});


const owner = "789524259809525780" // bot owner id here
const logChannel = "863113977844596746"; // console log channel id here



//function restartBot() {
//  child_process.spawn("node", ["main.js"], {detached: true});
//  process.exit();
//}


function log(something) { // –≤–æ—Ç —ç—Ç–∞ —Ö—É–µ—Ç–∞ —É –º–µ–Ω—è –≤ –∫–∞–Ω–∞–ª –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ '—è –∑–∞–≥—Ä—É–∑–∏–ª—Å—è'
  client.channels.resolve(logChannel).send(require("util").inspect(something));
}

client.on('ready', () => {
  log(`—è —Ä–æ–¥–∏–ª—Å—è`);

  client.user.setPresence({ activity: { name: "Minecraft –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö EEL Worlds" } })
});

client.on('message', async msg => { // —Ç–∞–∫ –æ–Ω–æ –∂–µ —Å–Ω–∏–∑—É –µ—Å—Ç—å –≤—Ä–¥–µ
  const array = msg.content.split(" ");
  const command = array[0].toLowerCase();
  const args = array.slice(1);
  const cmdfile = client.commands.get(command);
  if(cmdfile) return cmdfile.run(client, msg, args);
});

client.on("message", async msg => {

  if (msg.author.bot) return; // –∏–≥–Ω–æ—Ä–∏–º –±–æ—Ç–æ–≤

  function getRandomFromArray(arr) {
    return arr[Math.floor(Math.random() * arr.length)]
  }

  let x = msg.content.toLowerCase( );
  
  switch (x) {

    case '–∫—É':
      //msg.reply(getRandomFromArray(responses));

      break

    case '–ø–æ–∫–∞':
      //msg.reply(getRandomFromArray(responses2));

      break

    case '–¥–æ—Å—á–∏—Ç–∞–π –¥–æ 3':
      for (let i = 1; i <= 3; i++)
        //msg.reply(`${i}`);

      break

    case '—Ñ–æ–∫—É—Å':
      
      break

    case '—Ö–ª–µ–ø': // —Ç—É—Ç –ø–æ–º–æ—â—å
      

      break

    case 'restart':
    //  if (msg.author.id !== owner) return;
    //  restartBot();

      break

    case '–ª–∞–π–∫': // —è –µ—â–µ —Ç—É—Ç
      // msg.react('üëç')

      break

    case '—Ä–∂–∞—Ç—å':
      

      break

      case "–∞–¥–æ–≤—ã–π —Ñ–æ–∫—É—Å":

  break

    default:
      isCommand = false; // –µ—Å–ª–∏ –Ω–∏–∫—É–¥–∞ –Ω–µ –ø–æ–ø–∞–ª–∏ —Ç–æ —ç—Ç–æ —Ç–∏–ø–∞ –Ω–µ –∫–æ–º–∞–Ω–¥–∞
      break;
  }
});
client.login('ODU5NzEyNjQ1MjUxMDcyMDAw.YNwryw.DviJk-6QBvOZtg8wRNgjvNoQCP4');